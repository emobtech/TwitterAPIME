********************************************************************************
*                         TWITTER API ME 1.3 - READ ME                         *
********************************************************************************
*                         http://www.twitterapime.com                          *
********************************************************************************

 DESCRIPTION:
********************************************************************************
Twitter API ME defines a compelling and well defined API for Java developers
who wish to access Twitter's services. This project provides support for the
main and more popular services on Twitter, e.g., searching and "tweet" posting.
More services are added as new versions are released.

Twitter API ME is defined in such a way that developers will learn how to use it
quickly. In addition, the API is structured to work regardless of the underlying
Java platform (e.g. Java ME and Android), in order to make easier and quicker
for the developers to port their applications to other platforms.

 MINIMUM REQUIREMENTS:
********************************************************************************
+ Runtime Environment
  - Java ME: MIDP 2.0 / CLDC 1.0
  - Android 1.1

+ Development Environment
  - Java SDK 1.6
  - Java ME platform SDK 3.0, WTK 2.5.2 or any other compatible Java ME SDK
  - Android SDK 1.1 or newer.
  - Java Preprocessor (e.g. Antenna Preprocessor Plug-in for Eclipse)
  - Sony Ericsson Mobile JUnit 1.0 (for Java ME unit testing)
  
+ Build Environment
  - Apache Ant 1.7.1
  - Antenna 1.2 (for Java ME build only)
  - Findbugs 1.3.9 (optional)

 AVAILABLE IN THIS VERSION:
********************************************************************************
- xAuth support.
- UTF-8 characters support.
- Possibility to change service URLs used by API.
- Some bug fixes and optimizations.

 KNOWN BUGS IN THIS VERSION:
********************************************************************************
- None

 REMARKS:
********************************************************************************
- From this version 1.3 on, Twitter API ME will be also known as TwAPIme. It is
  just an abbreviation to our original name. The reason for this name is just
  to make easier to refer to this API, besides avoiding any confusing with
  Twitter API's name.
  
- From this version 1.3 TwAPIme binaries will be under GNU Lesser General Public
  License 3.0 (LGPL). It means you can develop proprietary applications with
  TwAPIme, since you merely link to our binaries without any modification.
  However, the source code is still under GPL 2.0.

- This new version comes with full support to xAuth to perform authentication
  with Twitter API, since Twitter will shut down Basic Http authentication
  support in June 30th, 2010. However, TwAPIme will continue supporting both
  methods. In order to work with xAuth, go to Twitter API website and get more
  details on that: http://dev.twitter.com/pages/auth

- In this version 1.3 we had to make a change in the method
  UserAccountManager.getUserAccount() signature that now throws IOException.
  This is why this call now has to access Twitter API to get the result. In
  version 1.2. it was done during the login.
  
  We apologize for this inconvenience and appreciate your comprehension.

 COMING NEXT VERSION: 1.4
********************************************************************************
- Trends.
- Followers list.
- Find people.
- Much more... Let us know what you need.

 BUILD ENVIRONMENT SETUP:
********************************************************************************
- In order for you to be able to build this project, the following build
  properties value (build.properties) must be defined according to your
  environment: 

wtk.home=<Java ME SDK PATH>
tapime.path.lib.midp20=${wtk.home}/<MIDP 2.0 JAR PATH>
tapime.path.lib.cldc10=${wtk.home}/<CLDC 1.0 JAR PATH>
tapime.path.lib.antenna=<ANTENNA JAR PATH>
tapime.path.findbugs=<FINDBUGS HOME DIR PATH>
tapime.path.lib.findbugs=<FINDBUGS ANT JAR PATH>
tapime.path.lib.android11=<ANDROID 1.1 JAR PATH>
tapime.path.lib.junit=<JUnit 3.8.1 JAR PATH>
tapime.path.lib.mobilejunit=<Mobile JUnit JAR PATH>

 PREPROCESSOR DIRECTIVES:
********************************************************************************
- If you intend to work with the API's source code directly, you need to know
  that this code contains some preprocessing directives, in order to manage the
  proper compilation for each target platform. Currently, the code is prepared
  for Java ME and Android, since they are target platforms of Twitter API ME.
  
  Before compiling the source code, you need to specify which platform this
  compilation is for in your IDE. For instance, you can use Antenna Preprocessor
  Plug-in for Eclipse for that. In case you want to compile for Java ME, use the
  directive PP_JAVA_ME. For Android, use PP_ANDROID. Otherwise, your binaries
  may present some strange behaviors during runtime.
  
 HEADS-UP ON OBFUSCATION:
********************************************************************************
- Just in case you decide to obfuscate Twitter API ME along with your
  application, there is something you need to know firstly. Internally, some
  classes are instantiated using reflection and this way, they cannot be
  obfuscated at all. Otherwise, you will get some unexpected behaviors, e.g.,
  NullPointerException.
  
  To avoid that and obfuscate you application properly, you need to specify in
  your obfuscation tool, to keep the following classes unmodified:
  - impl.javame.com.twitterapime.io.HttpConnectionImpl
  - impl.android.com.twitterapime.io.HttpConnectionImpl
  - impl.javame.com.twitterapime.parser.KXML2Parser
  - impl.android.com.twitterapime.io.HttpConnectionImpl