<project name="Twitter API ME" default="+build_all" basedir=".">

	<property file="build.properties"/>
	<property file="build.number"/>
	
    <target name="-load_taskdefs">
		<taskdef resource="antenna.properties">
			<classpath location="${tapime.path.lib.antenna}"/>
		</taskdef>
	</target>
	
	<target name="-clean">
        <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="${tapime.path.build}" includes="*,*/**"/>
        	<fileset dir="${tapime.version.path.dist}" includes="*,*/**"/>
        	<fileset dir="${tapime.path.javadoc}" includes="*,*/**"/>
        	<fileset dir="${tapime.path.test.bin}" includes="*,*/**"/>
        </delete>
    </target>

	<target name="-init" depends="-clean, -load_taskdefs">
		<mkdir dir="${tapime.path.build}"/>
		<mkdir dir="${tapime.path.src.preprocessed}"/>
		<mkdir dir="${tapime.path.build.bin}"/>
		<mkdir dir="${tapime.path.dist}"/>
		<mkdir dir="${tapime.version.path.dist}"/>
		<mkdir dir="${tapime.path.javadoc}"/>
		<mkdir dir="${tapime.path.test.bin}"/> 
	</target>
	
	<target name="-preprocessor" depends="-init">
		<copydir dest="${tapime.path.src.preprocessed}" src="${tapime.path.src}">
			<include name="com/twitterapime/**"/>
			<include name="impl/javame/**" if="tapime.building.javame"/>
			<include name="impl/android/**" if="tapime.building.android"/>
			<include name="impl/javame/com/twitterapime/parser/JSON**" if="tapime.building.android"/>
			<include name="impl/javame/**" if="tapime.building.rim"/>
			<include name="impl/rim/**" if="tapime.building.rim"/>
		</copydir>
		
		<wtkpreprocess srcdir="${tapime.path.src.preprocessed}"
			           destdir="${tapime.path.src.preprocessed}"
			           encoding="${tapime.version.encoding}"
			           symbols="${tapime.version.preprocessor.symbols}"/>
	</target>
	
	<target name="+javadoc">
		  <javadoc sourcepath="${tapime.path.src}"
		           destdir="${tapime.path.javadoc}"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="Twitter API ME"
		  		   locale="en_US"
		  		   excludepackagenames="impl.*">
		  	
		  	<doctitle><![CDATA[<h1>Twitter API ME</h1>]]></doctitle>
		  	<bottom><![CDATA[<i>Copyright &#169; 2011 Twitter API ME Team. All Rights Reserved.</i>]]></bottom>

		  </javadoc>
	</target>

	<target name="-compile" depends="-preprocessor">
		<javac srcdir="${tapime.path.src.preprocessed}"
			   destdir="${tapime.path.build.bin}"
			   encoding="${tapime.version.encoding}"
			   source="${tapime.version.source}"
			   target="${tapime.version.source}"
			   optimize="true"
			   debug="${tapime.compile.debug}">
			<classpath refid="tapime.classpath"/>
		</javac>
	</target>
	
	<target name="-lib_javame" if="tapime.building.javame">
		<jar basedir="${tapime.path.build.bin}" destfile="${tapime.version.path.dist}/${tapime.version.jar}">
			<zipfileset src="${tapime.path.lib.xauth-encoders}"/>
		</jar>
	</target>
	
	<target name="-lib_android" if="tapime.building.android">
		<jar basedir="${tapime.path.build.bin}" destfile="${tapime.version.path.dist}/${tapime.version.jar}">
			<zipfileset src="${tapime.path.lib.xauth-encoders}"/>
		</jar>
	</target>

	<target name="-lib_rim" if="tapime.building.rim">
		<jar basedir="${tapime.path.build.bin}" destfile="${tapime.version.path.dist}/${tapime.version.jar}">
			<zipfileset src="${tapime.path.lib.xauth-encoders}"/>
		</jar>
	</target>

	<target name="-classpath_javame" if="tapime.building.javame">
		<path id="tapime.classpath">
			<path path="${tapime.path.lib.midp20}"/>
			<path path="${tapime.path.lib.cldc10}"/>
			<path path="${tapime.path.lib.kxml2}"/>
			<path path="${tapime.path.lib.xauth-encoders}"/>
			<path path="${tapime.path.lib.jsonorg}"/>
		</path>
	</target>

	<target name="-classpath_android" if="tapime.building.android">
		<path id="tapime.classpath">
			<path path="${tapime.path.lib.android11}"/>
			<path path="${tapime.path.lib.xauth-encoders}"/>
			<path path="${tapime.path.lib.jsonorg}"/>
		</path>
	</target>
	
	<target name="-classpath_rim" if="tapime.building.rim">
		<path id="tapime.classpath">
			<path path="${tapime.path.lib.midp20}"/>
			<path path="${tapime.path.lib.cldc10}"/>
			<path path="${tapime.path.lib.kxml2}"/>
			<path path="${tapime.path.lib.xauth-encoders}"/>
			<path path="${tapime.path.lib.rim}"/>
			<path path="${tapime.path.lib.jsonorg}"/>
		</path>
	</target>
	
	<target name="-preverify_javame" if="tapime.building.javame">
		<wtkpreverify classpathref="tapime.classpath" jarfile="${tapime.version.path.dist}/${tapime.version.jar}"/>
	</target>

	<target name="-preverify_rim" if="tapime.building.rim">
		<exec executable="${tapime.path.rim.preverify}" failonerror="true">
		    <arg line='-classpath "${tapime.path.lib.rim}" -d "${tapime.version.path.dist}" "${tapime.path.lib.jsonorg}"' />
		</exec>
		<exec executable="${tapime.path.rim.preverify}" failonerror="true">
		    <arg line='-classpath "${tapime.path.lib.rim}" -d "${tapime.version.path.dist}" "${tapime.path.lib.kxml2}"' />
		</exec>
		<exec executable="${tapime.path.rim.preverify}" failonerror="true">
		    <arg line='-classpath "${tapime.path.lib.rim};${tapime.path.lib.jsonorg};${tapime.path.lib.kxml2}" -d "${tapime.version.path.dist}" "${tapime.version.path.dist}/${tapime.version.jar}"' />
		</exec>
	</target>
	
	<target name="-run" depends="-classpath_javame, -classpath_android, -classpath_rim, -compile, -lib_javame, -lib_android, -lib_rim, -preverify_javame, -preverify_rim, -findbugs, +javadoc, -package"/>
	
	<target name="+build_javame">
		<antcall target="-run">
			<param name="wtk.midp.version" value="2.0"/>
			<param name="wtk.cldc.version" value="1.0"/>
			<param name="wtk.midpapi" value="${tapime.path.lib.midp20};${tapime.path.lib.cldc10}"/>
			<param name="tapime.name" value="${tapime.javame.name}"/>
			<param name="tapime.building.javame" value="true"/>
			<param name="tapime.version.jar" value="${tapime.lib.name}-${tapime.number.version}.${build.number}.jar"/>
			<param name="tapime.version.impl.package" value="${tapime.javame.impl.package}"/>
			<param name="tapime.version.encoding" value="${tapime.javame.encoding}"/>
			<param name="tapime.version.source" value="${tapime.javame.source}"/>
			<param name="tapime.version.path.dist" value="${tapime.javame.path.dist}"/>
			<param name="tapime.version.preprocessor.symbols" value="${tapime.javame.preprocessor.symbols}"/>
		</antcall>
	</target>

	<target name="+build_android">
		<antcall target="-run">
			<param name="tapime.name" value="${tapime.android.name}"/>
			<param name="tapime.building.android" value="true"/>
			<param name="tapime.version.jar" value="${tapime.lib.name}-${tapime.number.version}.${build.number}.jar"/>
			<param name="tapime.version.impl.package" value="${tapime.android.impl.package}"/>
			<param name="tapime.version.encoding" value="${tapime.android.encoding}"/>
			<param name="tapime.version.source" value="${tapime.android.source}"/>
			<param name="tapime.version.path.dist" value="${tapime.android.path.dist}"/>
			<param name="tapime.version.preprocessor.symbols" value="${tapime.android.preprocessor.symbols}"/>
		</antcall>
	</target>
	
	<target name="+build_rim">
		<antcall target="-run">
			<param name="wtk.midp.version" value="2.0"/>
			<param name="wtk.cldc.version" value="1.0"/>
			<param name="wtk.midpapi" value="${tapime.path.lib.midp20};${tapime.path.lib.cldc10}"/>
			<param name="tapime.name" value="${tapime.rim.name}"/>
			<param name="tapime.building.rim" value="true"/>
			<param name="tapime.version.jar" value="${tapime.lib.name}-${tapime.number.version}.${build.number}.jar"/>
			<param name="tapime.version.impl.package" value="${tapime.rim.impl.package}"/>
			<param name="tapime.version.encoding" value="${tapime.rim.encoding}"/>
			<param name="tapime.version.source" value="${tapime.rim.source}"/>
			<param name="tapime.version.path.dist" value="${tapime.rim.path.dist}"/>
			<param name="tapime.version.preprocessor.symbols" value="${tapime.rim.preprocessor.symbols}"/>
		</antcall>
	</target>
	
	<target name="+increment_version">
		<buildnumber/>
	</target>
	
	<target name="-findbugs" if="tapime.findbugs">
		<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
			<classpath location="${tapime.path.lib.findbugs}"/>
		</taskdef>
		
	    <findbugs home="${tapime.path.findbugs}"
				  output="html"
	        	  outputFile="${tapime.version.path.dist}/findbugs-report-${tapime.name}-${tapime.number.version}.${build.number}.html"
		    	  sourcepath="${tapime.path.src.preprocessed}"
	    		  excludefilter="findbugs-filters.xml">
	    	<auxClasspath path="${tapime.path.lib.midp20}"/>
			<auxClasspath path="${tapime.path.lib.cldc10}"/>
	    	<auxClasspath path="${tapime.path.lib.android11}"/>
	    	<auxClasspath path="${tapime.path.lib.rim}"/>
	    	<auxClasspath path="${tapime.path.lib.jsonorg}"/>
	    	<auxClasspath path="${tapime.path.lib.kxml2}"/>
	        <class location="${tapime.version.path.dist}/${tapime.version.jar}"/>
        </findbugs>
	</target>

	<target name="-package">
		<property name="tapime.package" value="${tapime.lib.name}-${tapime.number.version}.${build.number}"/>

		<zip destfile="${tapime.version.path.dist}/${tapime.package}-${tapime.name}.zip">
			<zipfileset dir="${tapime.path.src.preprocessed}" prefix="${tapime.package}/src" includes="**/*.*"/>
			<zipfileset dir="${tapime.path.lib}" prefix="${tapime.package}/lib">
				<include name="${tapime.lib.kxml2}" if="tapime.building.javame"/>
				<include name="${tapime.lib.kxml2}" if="tapime.building.rim"/>
				<include name="${tapime.lib.jsonorg}"/>
			</zipfileset>	
			<zipfileset dir="${tapime.version.path.dist}" prefix="${tapime.package}/dist" includes="**/*.jar"/>
		    <zipfileset dir="${tapime.path.javadoc}" prefix="${tapime.package}/doc/javadoc" includes="**/*.*"/>
			<zipfileset dir="${basedir}" prefix="${tapime.package}" includes="LICENSE.txt"/>
			<zipfileset dir="${basedir}" prefix="${tapime.package}" includes="READ-ME.txt"/>
		</zip>
	</target>
	
	<target name="+build_all" depends="+build_javame, +build_android, +build_rim"/>
</project>